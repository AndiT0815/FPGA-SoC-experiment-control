#!/bin/sh

#SD card
SD="/dev/mmcblk0p1"
SD_mnt_auto="/run/media/mmcblk0p1"
SD_mnt="/mnt/sd"

#optional USB device
USB="/dev/sda"
USB_mnt_auto="/run/media/sda"

#parse input arguments
#-x name just for testing
#-s = server shutdown
server_shutdown=1
name="FPGA-exit"
while getopts ":x:s" flag; do
    case "${flag}" in
        x) name=${OPTARG};;        
        s) server_shutdown="1";;
        *) echo "using defaults"
    esac
done
echo "$name"
echo "server shutdown = $server_shutdown"

#go to root directory
cd

if [[ "$server_shutdown" -eq "1" ]]; then
    #stop server in case its still running
    echo "FPGA-exit: stopping FPGA server ..."
    FPGA-server -q
fi

#unmount SD card from auto-mounting point
if [[ $(mount | grep -c "$SD_mnt_auto") != 0 ]]; then
    echo "FPGA-exit: unmounting '$SD' from '$SD_mnt_auto'"
    umount $SD_mnt_auto
else
    echo "FPGA-exit: '$SD' already unmounted from '$SD_mnt_auto'"
fi

#unmount SD card from manual mounting point
if [[ $(mount | grep -c "$SD_mnt") != 0 ]]; then
    echo "FPGA-exit: unmounting '$SD' from '$SD_mnt'"
    umount $SD_mnt
else
    echo "FPGA-exit: '$SD' already unmounted from '$SD_mnt'"
fi

#delete my mounting point if exists
if [ -d "$SD_mnt" ]; then
    echo "FPGA-exit: remove '$SD_mnt'"
    rmdir $SD_mnt
else
    echo "FPGA-exit: '$SD_mnt' already removed"
fi

#unmount USB device from auto-mounting point
if [[ $(mount | grep -c "$USB_mnt_auto") != 0 ]]; then
    echo "FPGA-exit: unmounting '$USB' from '$USB_mnt_auto'"
    umount $USB_mnt_auto
else
    echo "FPGA-exit: '$USB' already unmounted from '$USB_mnt_auto'"
fi

echo "FPGA-exit: done"
